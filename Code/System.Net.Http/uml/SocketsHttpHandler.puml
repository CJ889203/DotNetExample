@startuml
class SocketsHttpHandler <<sealed>> {
    - <<readonly>> _settings : HttpConnectionSettings
    - _handler : HttpMessageHandlerStage
    - _disposed : bool
    - CheckDisposed() : void
    - CheckDisposedOrStarted() : void
    + {static} IsSupported : bool <<get>>
    + UseCookies : bool <<get>> <<set>>
    + CookieContainer : CookieContainer <<get>> <<set>>
    + AutomaticDecompression : DecompressionMethods <<get>> <<set>>
    + UseProxy : bool <<get>> <<set>>
    + Proxy : IWebProxy? <<get>> <<set>>
    + DefaultProxyCredentials : ICredentials? <<get>> <<set>>
    + PreAuthenticate : bool <<get>> <<set>>
    + Credentials : ICredentials? <<get>> <<set>>
    + AllowAutoRedirect : bool <<get>> <<set>>
    + MaxAutomaticRedirections : int <<get>> <<set>>
    + MaxConnectionsPerServer : int <<get>> <<set>>
    + MaxResponseDrainSize : int <<get>> <<set>>
    + ResponseDrainTimeout : TimeSpan <<get>> <<set>>
    + MaxResponseHeadersLength : int <<get>> <<set>>
    + SslOptions : SslClientAuthenticationOptions <<get>> <<set>>
    + PooledConnectionLifetime : TimeSpan <<get>> <<set>>
    + PooledConnectionIdleTimeout : TimeSpan <<get>> <<set>>
    + ConnectTimeout : TimeSpan <<get>> <<set>>
    + Expect100ContinueTimeout : TimeSpan <<get>> <<set>>
    + InitialHttp2StreamWindowSize : int <<get>> <<set>>
    + KeepAlivePingDelay : TimeSpan <<get>> <<set>>
    + KeepAlivePingTimeout : TimeSpan <<get>> <<set>>
    + KeepAlivePingPolicy : HttpKeepAlivePingPolicy <<get>> <<set>>
    + EnableMultipleHttp2Connections : bool <<get>> <<set>>
    + ConnectCallback : Func<SocketsHttpConnectionContext, CancellationToken, ValueTask<Stream>>? <<get>> <<set>>
    + PlaintextStreamFilter : Func<SocketsHttpPlaintextStreamFilterContext, CancellationToken, ValueTask<Stream>>? <<get>> <<set>>
    + Properties : IDictionary<string, object?> <<get>>
    + RequestHeaderEncodingSelector : HeaderEncodingSelector<HttpRequestMessage>? <<get>> <<set>>
    + ResponseHeaderEncodingSelector : HeaderEncodingSelector<HttpRequestMessage>? <<get>> <<set>>
    + ActivityHeadersPropagator : DistributedContextPropagator? <<get>> <<set>>
    # <<override>> Dispose(disposing:bool) : void
    - SetupHandlerChain() : HttpMessageHandlerStage
    # <<internal>> <<override>> Send(request:HttpRequestMessage, cancellationToken:CancellationToken) : HttpResponseMessage
    # <<internal>> <<override>> SendAsync(request:HttpRequestMessage, cancellationToken:CancellationToken) : Task<HttpResponseMessage>
    - ValidateAndNormalizeRequest(request:HttpRequestMessage) : Exception
}
HttpMessageHandler <|-- SocketsHttpHandler
@enduml
